"""
AtCoder 動的計画法(DP)問題

問題:
N段の階段があります。一度に1段または2段上ることができます。
頂上までの上り方は何通りあるでしょうか？
答えが大きくなる可能性があるので、10^9+7で割った余りを出力してください。

入力:
1行目: 階段の段数 N

出力:
上り方の総数を10^9+7で割った余り

制約:
1 <= N <= 10^5

入力例1:
3

出力例1:
3
解説: 1->1->1, 1->2, 2->1の3通りがあります。

入力例2:
4

出力例2:
5
"""

def solve():
    # 入力を受け取る
    N = int(input())
    MOD = 10**9 + 7
    
    # DPテーブル初期化
    dp = [0] * (N + 1)
    dp[0] = 1  # 0段目には1通りの方法でたどり着ける
    
    # DPループ
    for i in range(N):
        # i+1段目に行く
        if i + 1 <= N:
            dp[i + 1] = (dp[i + 1] + dp[i]) % MOD
        # i+2段目に行く
        if i + 2 <= N:
            dp[i + 2] = (dp[i + 2] + dp[i]) % MOD
    
    # 結果出力
    print(dp[N])

if __name__ == "__main__":
    solve()
