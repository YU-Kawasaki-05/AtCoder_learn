"""
AtCoder 二分探索問題

問題:
N個の都市があり、都市iの座標はX_iです。
あなたは1つの郵便局を座標Pに建設しようとしています。
すべての都市から郵便局までの距離の最大値を最小化するような座標Pを求め、
そのときの最大距離を出力してください。

入力:
1行目: 都市の数 N
2行目: N個の都市の座標 X_1, X_2, ..., X_N

出力:
最適な郵便局の位置における最大距離

制約:
1 <= N <= 10^5
1 <= X_i <= 10^9

入力例:
3
2 3 5

出力例:
1.5
解説: 座標3.5に郵便局を建設すると、最も遠い都市からの距離は1.5となります。
"""

def solve():
    # 入力を受け取る
    N = int(input())
    X = list(map(int, input().split()))
    
    # ソート
    X.sort()
    
    # 中央値が最適解
    if N % 2 == 1:
        # 奇数の場合
        P = X[N//2]
    else:
        # 偶数の場合
        P = (X[N//2 - 1] + X[N//2]) / 2
    
    # 最大距離を計算
    max_distance = max(abs(P - X[0]), abs(P - X[-1]))
    
    print(max_distance)

if __name__ == "__main__":
    solve()
